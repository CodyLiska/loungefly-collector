<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <title>Loungefly Collector</title>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          fontFamily: {
            sans: ['Inter', 'sans-serif'],
          },
          colors: {
            primary: '#6366f1',
            secondary: '#4f46e5',
          }
        }
      }
    }
  </script>
</head>

<body class="bg-gray-50 font-sans">
  {{> _header}}
  {{> _add_btn}}

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    {{!-- Flash Messages --}}
    {{#if success_msg}}
      <div class="mb-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded" role="alert">
        <p class="font-medium">{{success_msg}}</p>
      </div>
    {{/if}}
    {{#if error_msg}}
      <div class="mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded" role="alert">
        <p class="font-medium">{{error_msg}}</p>
      </div>
    {{/if}}
    {{#if error}}
      <div class="mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded" role="alert">
        <p class="font-medium">{{error}}</p>
      </div>
    {{/if}}
    
    {{{body}}}
  </div>

  {{!-- Toast Container --}}
  <div id="toast-container" class="fixed bottom-4 right-4 z-50"></div>

  {{!-- Toast Template --}}
  <template id="toast-template">
    <div class="transform translate-x-full transition-transform duration-300 ease-out mb-4 w-80 bg-white rounded-xl shadow-lg border border-gray-100 overflow-hidden">
      <div class="p-4">
        <div class="flex items-start">
          <div class="flex-shrink-0">
            <i class="fas fa-check-circle text-green-500 text-xl"></i>
          </div>
          <div class="ml-3 w-0 flex-1">
            <p class="text-sm font-medium text-gray-900" id="toast-message"></p>
          </div>
          <div class="ml-4 flex-shrink-0 flex">
            <button class="bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none" onclick="this.closest('.transform').remove()">
              <span class="sr-only">Close</span>
              <i class="fas fa-times"></i>
            </button>
          </div>
        </div>
      </div>
      <div class="bg-green-500 h-0.5 w-full transition-all duration-300" id="toast-progress"></div>
    </div>
  </template>

  {{!-- Modal Template --}}
  <template id="modal-template">
    <div class="fixed inset-0 z-50 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
      <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeModal()"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="relative inline-block align-bottom bg-white rounded-2xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
          <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
            <div class="sm:flex sm:items-start">
              <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
                <div class="absolute right-4 top-4">
                  <button type="button" onclick="closeModal()" class="text-gray-400 hover:text-gray-500">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4" id="modal-title"></h3>
                <div class="mt-2">
                  <form id="add-to-collection-form" method="POST" class="space-y-4">
                    {{!-- Status Selection --}}
                    <div>
                      <label class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                      <div class="grid grid-cols-2 gap-3">
                        <label class="relative flex cursor-pointer">
                          <input type="radio" name="status" value="owned" class="peer sr-only" required>
                          <div class="w-full p-3 bg-white border-2 border-gray-200 rounded-xl peer-checked:border-green-500 peer-checked:bg-green-50 transition-all duration-200">
                            <div class="flex items-center justify-center">
                              <i class="fas fa-check-circle text-green-500 mr-2"></i>
                              <span class="text-sm font-medium text-gray-900">Owned</span>
                            </div>
                          </div>
                        </label>
                        <label class="relative flex cursor-pointer">
                          <input type="radio" name="status" value="wishlist" class="peer sr-only" required>
                          <div class="w-full p-3 bg-white border-2 border-gray-200 rounded-xl peer-checked:border-blue-500 peer-checked:bg-blue-50 transition-all duration-200">
                            <div class="flex items-center justify-center">
                              <i class="fas fa-heart text-blue-500 mr-2"></i>
                              <span class="text-sm font-medium text-gray-900">Wishlist</span>
                            </div>
                          </div>
                        </label>
                      </div>
                    </div>

                    {{!-- Condition Selection (only shown if Owned is selected) --}}
                    <div id="condition-section" class="hidden">
                      <label class="block text-sm font-medium text-gray-700 mb-2">Condition</label>
                      <select name="condition" class="w-full px-4 py-3 border border-gray-200 rounded-xl focus:ring-2 focus:ring-primary focus:border-transparent outline-none transition-all duration-200">
                        <option value="">Select condition...</option>
                        <option value="New">New</option>
                        <option value="Like New">Like New</option>
                        <option value="Very Good">Very Good</option>
                        <option value="Good">Good</option>
                        <option value="Acceptable">Acceptable</option>
                      </select>
                    </div>

                    {{!-- Hidden fields for search return --}}
                    <input type="hidden" id="modal-return-to" name="returnTo">
                    <input type="hidden" id="modal-return-page" name="returnPage">

                    <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                      <button type="submit"
                        class="w-full inline-flex justify-center rounded-xl border border-transparent shadow-sm px-4 py-2 bg-gradient-to-r from-primary to-secondary text-base font-medium text-white hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:ml-3 sm:w-auto sm:text-sm">
                        Add to Collection
                      </button>
                      <button type="button" onclick="closeModal()"
                        class="mt-3 w-full inline-flex justify-center rounded-xl border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary sm:mt-0 sm:w-auto sm:text-sm">
                        Cancel
                      </button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </template>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/ckeditor/4.14.1/ckeditor.js"
    integrity="sha256-bEIQpI72w9NJuIVhTLFUF2/8uxl0u5800r8ddViuv+o=" crossorigin="anonymous"></script>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
    integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link rel="stylesheet" href="/css/styles.css">

  <script>
    function showToast(message, duration = 3000) {
      const container = document.getElementById('toast-container');
      const template = document.getElementById('toast-template');
      const toast = template.content.cloneNode(true);
      
      // Set the message
      toast.querySelector('#toast-message').textContent = message;
      
      // Add to container
      container.appendChild(toast);
      
      // Get the toast element (now in the DOM)
      const toastElement = container.lastElementChild;
      
      // Trigger animation
      requestAnimationFrame(() => {
        toastElement.classList.remove('translate-x-full');
      });

      // Start progress bar
      const progressBar = toastElement.querySelector('#toast-progress');
      progressBar.style.width = '100%';
      setTimeout(() => {
        progressBar.style.width = '0%';
      }, 100);
      
      // Remove after duration
      setTimeout(() => {
        toastElement.classList.add('translate-x-full');
        setTimeout(() => {
          toastElement.remove();
        }, 300);
      }, duration);
    }

    // Check for success message in URL and show toast
    window.addEventListener('DOMContentLoaded', () => {
      const urlParams = new URLSearchParams(window.location.search);
      const successMessage = urlParams.get('success');
      if (successMessage) {
        showToast(decodeURIComponent(successMessage));
        // Remove success parameter from URL without refreshing
        const newUrl = window.location.pathname + 
          window.location.search.replace(/[?&]success=[^&]+/, '') +
          window.location.hash;
        window.history.replaceState({}, '', newUrl);
      }
    });
  </script>

  <script>
    // Modal functionality
    function showModal(backpackId, backpackName, returnTo, returnPage) {
      const template = document.getElementById('modal-template');
      const modal = template.content.cloneNode(true);
      
      // Set form action and title
      const form = modal.querySelector('#add-to-collection-form');
      form.action = `/backpacks/${backpackId}/add`;
      modal.querySelector('#modal-title').textContent = `Add ${backpackName} to Collection`;
      
      // Set return values
      modal.querySelector('#modal-return-to').value = returnTo || '';
      modal.querySelector('#modal-return-page').value = returnPage || '1';
      
      // Add to body
      document.body.appendChild(modal);

      // Now that the modal is in the DOM, setup condition visibility toggle
      const modalElement = document.querySelector('[role="dialog"]');
      const statusInputs = modalElement.querySelectorAll('input[name="status"]');
      const conditionSection = modalElement.querySelector('#condition-section');
      
      statusInputs.forEach(input => {
        input.addEventListener('change', (e) => {
          if (e.target.value === 'owned') {
            conditionSection.classList.remove('hidden');
            conditionSection.querySelector('select').required = true;
          } else {
            conditionSection.classList.add('hidden');
            conditionSection.querySelector('select').required = false;
            conditionSection.querySelector('select').value = '';
          }
        });
      });
    }

    function closeModal() {
      const modal = document.querySelector('[role="dialog"]');
      if (modal) {
        modal.remove();
      }
    }
  </script>
</body>

</html>